version: '3.8'

services:
  backend:
    image: ghcr.io/${GITHUB_REPOSITORY}/backend:latest
    container_name: video-manager-backend
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=sqlite:///./data/video_learning.db
      - REDIS_URL=redis://redis:6379/0
      - WHISPER_MODEL=medium
      - WHISPER_DEVICE=cpu
      - WHISPER_COMPUTE_TYPE=int8
    volumes:
      - /opt/video-learning-manager/data:/app/data
      - /opt/video-learning-manager/uploads:/var/video-learning-manager/uploads
      - /opt/video-learning-manager/videos:/var/video-learning-manager/videos
      - /opt/video-learning-manager/audios:/var/video-learning-manager/audios
      - /opt/video-learning-manager/thumbnails:/var/video-learning-manager/thumbnails
    depends_on:
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    image: ghcr.io/${GITHUB_REPOSITORY}/frontend:latest
    container_name: video-manager-frontend
    restart: unless-stopped
    expose:
      - "8080"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7-alpine
    container_name: video-manager-redis
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    expose:
      - "6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 5s
      retries: 3

  nginx:
    image: nginx:alpine
    container_name: video-manager-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /opt/video-learning-manager/nginx.conf:/etc/nginx/nginx.conf:ro
      - /opt/video-learning-manager/ssl:/etc/nginx/ssl:ro  # SSL证书目录
    depends_on:
      - backend
      - frontend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # 可选：添加监控
  watchtower:
    image: containrrr/watchtower
    container_name: video-manager-watchtower
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --interval 300 --cleanup  # 5分钟检查一次更新
    environment:
      - WATCHTOWER_NOTIFICATIONS=slack
      - WATCHTOWER_NOTIFICATION_SLACK_HOOK_URL=${SLACK_WEBHOOK_URL}

volumes:
  redis_data:
    driver: local

networks:
  default:
    name: video-manager-network